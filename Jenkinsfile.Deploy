pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dockerdind
    image: docker:dind
    env:
    - name: KUBECONFIG
      value: "/tmp/config"
    command: ['cat']
    tty: true
    volumeMounts:
    - name: dockersock
      mountPath: /var/run/docker.sock
  volumes:
  - name: dockersock
    hostPath:
      path: /var/run/docker.sock
'''

           defaultContainer 'dockerdind'
          }
    }
    environment {
    EXAMPLE_KEY = credentials('kubeconfigfile')
  }
    stages {
        stage('Build&Push IMG') {
            steps {
                script {
                        docker.withRegistry('https://registry.hub.docker.com', 'leminepam') {
                        def customImage = docker.build("leminepam/dockerhub:${GIT_BRANCH}", "java/DemoSpringBootApp/");
                        customImage.push();
                        }
                 }
             }
         }
         stage('Deploy IMG to k8s from helm') {
            steps {
    //            sh 'echo ${env.BRANCH_NAME}'
                sh 'apk --no-cache add curl'
                sh 'curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3'
                sh 'chmod 700 get_helm.sh'
                sh 'sed -i.bak "1 s/^.*$/#!\\/bin\\/sh/" get_helm.sh'
                sh './get_helm.sh'
                sh 'cat ${EXAMPLE_KEY} >> /tmp/config'
                sh 'helm repo add leminrepo-charts https://leminepam.github.io/testproject/'
                sh 'helm ls'
                sh 'printenv'
//                sh 'helm install myapp-chart leminrepo-charts/myapp-helm --set namespace=dev '
                }
            }
         }
}
